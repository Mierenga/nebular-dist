{"version":3,"file":"moment-date.service.js","sourceRoot":"","sources":["../../../../../.ng_build/moment/services/moment-date.service.ts"],"names":[],"mappings":"AAAA;;;;GAIG;;;;;;;;;;;;;AAEH,OAAO,EAAE,MAAM,EAAE,UAAU,EAAE,SAAS,EAAE,MAAM,eAAe,CAAC;AAC9D,OAAO,EAAE,gBAAgB,EAAE,MAAM,iBAAiB,CAAC;AAEnD,OAAO,EAAE,aAAa,EAAE,MAAM,gBAAgB,CAAC;AAE/C,OAAO,KAAK,OAAO,MAAM,QAAQ,CAAC;AAClC,aAAa;AACb,OAAO,EAAE,OAAO,IAAI,aAAa,EAAU,MAAM,QAAQ,CAAC;AAE1D,MAAM,MAAM,GAAG,aAAa,IAAI,OAAO,CAAC;AAIxC,IAAa,mBAAmB,GAAhC,MAAa,mBAAoB,SAAQ,aAAqB;IAQ5D,YAA+B,MAAc;QAC3C,KAAK,EAAE,CAAC;QACR,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;IACzB,CAAC;IAED,SAAS,CAAC,MAAc;QACtB,KAAK,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;QACxB,IAAI,CAAC,mBAAmB,CAAC,MAAM,CAAC,CAAC;IACnC,CAAC;IAED,MAAM,CAAC,IAAY,EAAE,IAAY;QAC/B,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,EAAE,IAAI,EAAE,CAAC,CAAC;IACxC,CAAC;IAED,QAAQ,CAAC,IAAY,EAAE,MAAc;QACnC,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,EAAE,MAAM,EAAE,CAAC,CAAC;IAC1C,CAAC;IAED,OAAO,CAAC,IAAY,EAAE,KAAa;QACjC,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC;IACzC,CAAC;IAED,KAAK,CAAC,IAAY;QAChB,OAAO,IAAI,CAAC,KAAK,EAAE,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IAC1C,CAAC;IAED,YAAY,CAAC,KAAa,EAAE,KAAa;QACvC,OAAO,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC;YAC9C,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC;YAC3C,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;IAC9C,CAAC;IAED,UAAU,CAAC,IAAY,EAAE,KAAa,EAAE,IAAY;QAClD,OAAO,MAAM,CAAC,CAAC,IAAI,EAAE,KAAK,EAAE,IAAI,CAAC,CAAC,CAAC;IACrC,CAAC;IAED,MAAM,CAAC,IAAY,EAAE,MAAc;QACjC,IAAI,IAAI,EAAE;YACR,OAAO,IAAI,CAAC,MAAM,CAAC,MAAM,IAAI,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC,CAAC;SAC7D;QAED,OAAO,EAAE,CAAC;IACZ,CAAC;IAED,OAAO,CAAC,IAAY;QAClB,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,IAAI,EAAE,CAAC;IACjC,CAAC;IAED,YAAY,CAAC,IAAY;QACvB,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,GAAG,EAAE,CAAC;IAChC,CAAC;IAED,iBAAiB,CAAC,QAA0B,gBAAgB,CAAC,MAAM;QACjE,OAAO,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IACrC,CAAC;IAED,iBAAiB;QACf,OAAO,IAAI,CAAC,UAAU,CAAC,cAAc,CAAC;IACxC,CAAC;IAED,QAAQ,CAAC,IAAY;QACnB,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,KAAK,EAAE,CAAC;IAClC,CAAC;IAED,WAAW,CAAC,IAAY;QACtB,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;IACzC,CAAC;IAED,YAAY,CAAC,IAAY,EAAE,QAA0B,gBAAgB,CAAC,WAAW;QAC/E,MAAM,KAAK,GAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;QAClC,OAAO,IAAI,CAAC,mBAAmB,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;IAChD,CAAC;IAED,mBAAmB,CAAC,KAAa,EAAE,QAA0B,gBAAgB,CAAC,WAAW;QACvF,OAAO,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,KAAK,CAAC,CAAC;IAC9C,CAAC;IAED,aAAa,CAAC,IAAY;QACxB,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;IAC3C,CAAC;IAED,sBAAsB,CAAC,IAAY;QACjC,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,WAAW,EAAE,CAAC;IACxC,CAAC;IAED,OAAO,CAAC,IAAY;QAClB,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,IAAI,EAAE,CAAC;IACjC,CAAC;IAED,UAAU,CAAC,IAAY;QACrB,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;IACxC,CAAC;IAED,YAAY,CAAC,IAAY;QACvB,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;IAC1C,CAAC;IAED,SAAS,CAAC,KAAa,EAAE,KAAa;QACpC,OAAO,IAAI,CAAC,WAAW,CAAC,KAAK,EAAE,KAAK,CAAC,IAAI,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,KAAK,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;IACvF,CAAC;IAED,WAAW,CAAC,KAAa,EAAE,KAAa;QACtC,OAAO,IAAI,CAAC,UAAU,CAAC,KAAK,EAAE,KAAK,CAAC,IAAI,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,KAAK,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;IACxF,CAAC;IAED,UAAU,CAAC,KAAa,EAAE,KAAa;QACrC,OAAO,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,KAAK,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;IACrD,CAAC;IAED,iBAAiB,CAAC,IAAY,EAAE,MAAc;QAC5C,OAAO,MAAM,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC,OAAO,EAAE,CAAC;IACxC,CAAC;IAED,KAAK,CAAC,IAAY,EAAE,MAAc;QAChC,OAAO,MAAM,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;IAC9B,CAAC;IAED,KAAK;QACH,OAAO,MAAM,EAAE,CAAC;IAClB,CAAC;IAED,KAAK;QACH,OAAO,QAAQ,CAAC;IAClB,CAAC;IAES,mBAAmB,CAAC,MAAc;QAC1C,MAAM,gBAAgB,GAAG,MAAM,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC;QAEnD,IAAI,CAAC,UAAU,GAAG;YAChB,cAAc,EAAE,gBAAgB,CAAC,cAAc,EAAE;YACjD,aAAa,EAAE,gBAAgB,CAAC,cAAc,CAAC,GAAG,CAAC;YACnD,MAAM,EAAE;gBACN,CAAC,gBAAgB,CAAC,WAAW,CAAC,EAAE,gBAAgB,CAAC,WAAW,EAAE;gBAC9D,CAAC,gBAAgB,CAAC,IAAI,CAAC,EAAE,gBAAgB,CAAC,MAAM,EAAE;aACnD;YACD,IAAI,EAAE;gBACJ,CAAC,gBAAgB,CAAC,IAAI,CAAC,EAAE,gBAAgB,CAAC,QAAQ,EAAE;gBACpD,CAAC,gBAAgB,CAAC,KAAK,CAAC,EAAE,gBAAgB,CAAC,aAAa,EAAE;gBAC1D,CAAC,gBAAgB,CAAC,MAAM,CAAC,EAAE,gBAAgB,CAAC,WAAW,EAAE;aAC1D;SACF,CAAC;IACJ,CAAC;IAED,aAAa,CAAC,IAAY;QACxB,OAAO,IAAI,CAAC,IAAI,EAAE,CAAC;IACrB,CAAC;CACF,CAAA;AA1JY,mBAAmB;IAD/B,UAAU,EAAE;IASE,WAAA,MAAM,CAAC,SAAS,CAAC,CAAA;;GARnB,mBAAmB,CA0J/B;SA1JY,mBAAmB","sourcesContent":["/*\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport { Inject, Injectable, LOCALE_ID } from '@angular/core';\nimport { TranslationWidth } from '@angular/common';\n\nimport { NbDateService } from '@nebular/theme';\n\nimport * as _moment from 'moment';\n// @ts-ignore\nimport { default as _rollupMoment, Moment } from 'moment';\n\nconst moment = _rollupMoment || _moment;\n\n\n@Injectable()\nexport class NbMomentDateService extends NbDateService<Moment> {\n  protected localeData: {\n    firstDayOfWeek: number,\n    defaultFormat: string,\n    months: { [key: string]: string[] },\n    days: { [key: string]: string[] },\n  };\n\n  constructor(@Inject(LOCALE_ID) locale: string) {\n    super();\n    this.setLocale(locale);\n  }\n\n  setLocale(locale: string) {\n    super.setLocale(locale);\n    this.setMomentLocaleData(locale);\n  }\n\n  addDay(date: Moment, days: number): Moment {\n    return this.clone(date).add({ days });\n  }\n\n  addMonth(date: Moment, months: number): Moment {\n    return this.clone(date).add({ months });\n  }\n\n  addYear(date: Moment, years: number): Moment {\n    return this.clone(date).add({ years });\n  }\n\n  clone(date: Moment): Moment {\n    return date.clone().locale(this.locale);\n  }\n\n  compareDates(date1: Moment, date2: Moment): number {\n    return this.getYear(date1) - this.getYear(date2) ||\n      this.getMonth(date1) - this.getMonth(date2) ||\n      this.getDate(date1) - this.getDate(date2);\n  }\n\n  createDate(year: number, month: number, date: number): Moment {\n    return moment([year, month, date]);\n  }\n\n  format(date: Moment, format: string): string {\n    if (date) {\n      return date.format(format || this.localeData.defaultFormat);\n    }\n\n    return '';\n  }\n\n  getDate(date: Moment): number {\n    return this.clone(date).date();\n  }\n\n  getDayOfWeek(date: Moment): number {\n    return this.clone(date).day();\n  }\n\n  getDayOfWeekNames(style: TranslationWidth = TranslationWidth.Narrow): string[] {\n    return this.localeData.days[style];\n  }\n\n  getFirstDayOfWeek(): number {\n    return this.localeData.firstDayOfWeek;\n  }\n\n  getMonth(date: Moment): number {\n    return this.clone(date).month();\n  }\n\n  getMonthEnd(date: Moment): Moment {\n    return this.clone(date).endOf('month');\n  }\n\n  getMonthName(date: Moment, style: TranslationWidth = TranslationWidth.Abbreviated): string {\n    const month = this.getMonth(date);\n    return this.getMonthNameByIndex(month, style);\n  }\n\n  getMonthNameByIndex(month: number, style: TranslationWidth = TranslationWidth.Abbreviated): string {\n    return this.localeData.months[style][month];\n  }\n\n  getMonthStart(date: Moment): Moment {\n    return this.clone(date).startOf('month');\n  }\n\n  getNumberOfDaysInMonth(date: Moment): number {\n    return this.clone(date).daysInMonth();\n  }\n\n  getYear(date: Moment): number {\n    return this.clone(date).year();\n  }\n\n  getYearEnd(date: Moment): Moment {\n    return this.clone(date).endOf('year');\n  }\n\n  getYearStart(date: Moment): Moment {\n    return this.clone(date).startOf('year');\n  }\n\n  isSameDay(date1: Moment, date2: Moment): boolean {\n    return this.isSameMonth(date1, date2) && this.getDate(date1) === this.getDate(date2);\n  }\n\n  isSameMonth(date1: Moment, date2: Moment): boolean {\n    return this.isSameYear(date1, date2) && this.getMonth(date1) === this.getMonth(date2);\n  }\n\n  isSameYear(date1: Moment, date2: Moment): boolean {\n    return this.getYear(date1) === this.getYear(date2);\n  }\n\n  isValidDateString(date: string, format: string): boolean {\n    return moment(date, format).isValid();\n  }\n\n  parse(date: string, format: string): Moment {\n    return moment(date, format);\n  }\n\n  today(): Moment {\n    return moment();\n  }\n\n  getId(): string {\n    return 'moment';\n  }\n\n  protected setMomentLocaleData(locale: string) {\n    const momentLocaleData = moment.localeData(locale);\n\n    this.localeData = {\n      firstDayOfWeek: momentLocaleData.firstDayOfWeek(),\n      defaultFormat: momentLocaleData.longDateFormat('L'),\n      months: {\n        [TranslationWidth.Abbreviated]: momentLocaleData.monthsShort(),\n        [TranslationWidth.Wide]: momentLocaleData.months(),\n      },\n      days: {\n        [TranslationWidth.Wide]: momentLocaleData.weekdays(),\n        [TranslationWidth.Short]: momentLocaleData.weekdaysShort(),\n        [TranslationWidth.Narrow]: momentLocaleData.weekdaysMin(),\n      },\n    };\n  }\n\n  getWeekNumber(date: Moment): number {\n    return date.week();\n  }\n}\n"]}